import React, { useState, useEffect } from 'react'
import axios from 'axios'
import { createClient } from '@supabase/supabase-js'
import Logo from './assets/images/mint_logo.png'
import './assets/style.css'

function App() {
  const [vstate, setVState] = useState(false)

  const [members, setMembers] = useState([])

    useEffect(() => {
      async function fetchMembers() {
        try {
          const response = await axios.get(process.env.REACT_APP_HOST_URL as string)
          setMembers(response.data)
        } catch (error) {
          console.error('Error fetching members:', error)
        }
      }

      fetchMembers()
    }, [])

    useEffect(() => {
      if(members.length > 0) {
        getUser()
      }
    }, [members])

  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string
  const supabaseKey = process.env.REACT_APP_SUPABASE_KEY as string
  const supabase = createClient(supabaseUrl, supabaseKey)

  if (!supabaseUrl || !supabaseKey) {
    throw new Error('Supabase URL or Anon Key is missing');
  }
  
  async function signInWithDiscord() {
    const { data, error } = await supabase.auth.signInWithOAuth({
      provider: 'discord',
    })
  }
  async function getUser() {
    const { data: { user } } = await supabase.auth.getUser()
    if(user) {
      if(members.findIndex(id => id == user.user_metadata.provider_id) != -1) {
        setVState(true)
      }
    }
  }

  return (
    <div className='app'>
      <div className='container'>
        <div className='logo_box'>
          <img src={Logo} alt='Logo' className='logo'/>
        </div>

        <p className='pbold'>
          Pioneering minters, we welcome you to the genesis of Mint Protocol.
        </p>
        <p className='plight'>
          You have received an exclusive invitation to our inaugural Mint Protocol event. Prepare yourself for many unique surprises reserved for those who:
        </p>
        <p className='plight'>
          1. Are active participants in our Discord community<br/>
          2. Post the verification tweet generated by this site<br/>
          3. Are following our twitter account @mintprotocolapp
        </p>

        <div className='label'>
          <div className='label_point'></div>
          <p className='label_text'>Join the Discord:</p>
        </div>
        <button className='btn btn_discord' onClick={signInWithDiscord}>LOGIN WITH DISCORD</button>
        <button className='btn btn_verify' disabled={!vstate}>{vstate ? 'VERIFIED' : 'VERIFY'}</button>

        <div className='label'>
          <div className='label_point'></div>
          <p className='label_text'>Get the Verification Link for Twitter:</p>
        </div>
        <input className='input input_username' placeholder='@username' />
        <button className='btn btn_generate'>GENERATE</button>

        <p className='pbold'>
          Tweet the following message on your feed and then follow @MintProtocolApp on twitter!
        </p>
        <p className='plight'>
          ”Exploring the future of leverage'd yield with @MintProtocolApp as an early pioneer.<br/>
          Get a cut of the upside here: pioneer.mintprotocol.app”
        </p>

        <div className='label'>
          <div className='label_point'></div>
          <p className='label_text'>Add your ETH address below:</p>
        </div>
        <input className='input input_wallet' placeholder='0x71C7656EC7ab88b098defB751B7401B5f6d8...' />
      
        <div className='label'>
          <div className='label_point'></div>
          <p className='label_text'>Finalize your status:</p>
        </div>
        <button className='btn btn_submit'>SUBMIT ENTRY</button>
      </div>
    </div>
  );
}

export default App;
